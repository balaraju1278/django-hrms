# -*- coding: utf-8 -*-
# Generated by Django 1.11 on 2018-11-06 05:06
from __future__ import unicode_literals

import customers.c_models.customer
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('people', '0002_auto_20181106_0506'),
    ]

    operations = [
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('company_name', models.CharField(blank=True, help_text='Name of Customer Company', max_length=150, null=True, unique=True, validators=[customers.c_models.customer.validate_company_name], verbose_name='Company Name')),
                ('company_type', models.CharField(blank=True, help_text='Company Type ex:startup, mnc, pvt ltd', max_length=150, null=True, verbose_name='Company Type')),
                ('company_domain', models.CharField(blank=True, help_text='Company domain ex:finance,manufacturing', max_length=150, null=True, verbose_name='Company Domain')),
                ('contact_person', models.CharField(blank=True, max_length=150, null=True, unique=True, verbose_name='Contact Person')),
                ('contact_email', models.EmailField(blank=True, max_length=150, null=True, unique=True, validators=[customers.c_models.customer.validate_contact_email], verbose_name='Contact Email')),
                ('email_type', models.CharField(blank=True, choices=[('Office', 'OFFICE'), ('Personal', 'PERSONAL')], max_length=25, null=True, verbose_name='Email Type')),
                ('contact_number', models.CharField(blank=True, max_length=12, null=True, unique=True, validators=[customers.c_models.customer.validate_contact_number], verbose_name='Contact Number')),
                ('number_type', models.CharField(blank=True, choices=[('Office', 'OFFICE'), ('Personal', 'PERSONAL')], max_length=25, null=True, verbose_name='Number Type')),
                ('alt_email', models.EmailField(blank=True, max_length=150, null=True, verbose_name='Alternative Email')),
                ('alt_num', models.CharField(blank=True, max_length=150, null=True, verbose_name='Alternative Number')),
                ('aggrement_date', models.DateField()),
                ('company_location', models.CharField(blank=True, help_text='Company Addres location-upto 50 chars', max_length=50, null=True, verbose_name='Location')),
                ('company_street', models.CharField(blank=True, help_text='Company Addres street-upto 50 chars', max_length=50, null=True, verbose_name='Street')),
                ('company_city', models.CharField(blank=True, help_text='Company Addres city-upto 50 chars', max_length=150, null=True, verbose_name='Company City')),
                ('company_state', models.CharField(blank=True, help_text='Company Addres state-upto 50 chars', max_length=50, null=True, verbose_name='state')),
                ('company_country', models.CharField(blank=True, help_text='Company Addres Country-upto 50 chars', max_length=50, null=True, verbose_name='Country')),
                ('company_pincode', models.CharField(blank=True, help_text='Company Addres pincode-upto 6 chars', max_length=6, null=True, verbose_name='Pincode')),
                ('onsite_deliver', models.BooleanField(default=True, verbose_name='Onsite Deliver')),
                ('num_employess', models.CharField(blank=True, help_text='Our emplooyes number with customer', max_length=2, null=True, verbose_name='Number of Employees')),
                ('emp_department', models.CharField(blank=True, max_length=150, null=True, verbose_name='Employee Wroking Department')),
                ('created_date', models.DateTimeField(auto_now=True)),
                ('modified_date', models.DateTimeField(auto_now_add=True)),
                ('slug', models.SlugField(max_length=100, unique=True, verbose_name='Slug')),
                ('employees', models.ManyToManyField(help_text='Employess working with customer', to='people.Employee', verbose_name='Employees')),
            ],
            options={
                'verbose_name': 'Customer',
                'verbose_name_plural': 'Customers',
            },
        ),
        migrations.CreateModel(
            name='CustomerBilling',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'verbose_name': 'Customer Billing',
            },
        ),
        migrations.CreateModel(
            name='CustomerInvoice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'verbose_name': 'Customer Invoice',
            },
        ),
        migrations.CreateModel(
            name='CustomerProject',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, help_text='Customer Project title', max_length=300, null=True, verbose_name='Project Title')),
                ('description', models.TextField(blank=True, help_text='Small Description about customer project', null=True, verbose_name='Description')),
                ('project_head', models.CharField(blank=True, help_text='Project Head[customer side]', max_length=100, null=True, verbose_name='Project Head')),
                ('status', models.CharField(choices=[('Started', 'STARTED'), ('ON_GOING', 'ON_GOING'), ('COMPLETD', 'COMPLETED')], max_length=10, verbose_name='Projec Status')),
                ('started_at', models.DateField()),
                ('created_at', models.DateTimeField(auto_now=True)),
                ('modefied_at', models.DateTimeField(auto_now_add=True)),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='customers.Customer', verbose_name='Customer')),
                ('employees', models.ManyToManyField(help_text='Employess working with Customer', related_name='employees_with_customer', to='people.Employee', verbose_name='Employees')),
                ('project_dealer', models.ForeignKey(help_text='Contact Account Manager', on_delete=django.db.models.deletion.CASCADE, related_name='account_manager_with_customer', to='people.Employee', verbose_name='Account Manager')),
            ],
            options={
                'verbose_name': 'Customer Projects',
                'verbose_name_plural': 'Customer Projects',
            },
        ),
    ]
